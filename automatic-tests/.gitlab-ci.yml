image: node:16.19.0-alpine

cache:
  key: $CI_COMMIT_REF_SLUG
  paths:
    - .npm/

stages:
  - lint
  - build
  - test
  - deploy

lint:
  stage: lint
  script:
    - npm ci --cache .npm --prefer-offline
    - npm run lint && npm run format:check
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == "main"

build:
  image: docker:23.0.3
  services:
    - docker:23.0.3-dind
  stage: build
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == "main"

test:
  stage: test
  script:
    - npm ci --cache .npm --prefer-offline
    - npm run test
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == "main"
e2e:
  services:
    - name: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
      alias: frontend
  image: cypress/browsers:node-16.18.1-chrome-110.0.5481.96-1-ff-109.0-edge-110.0.1587.41-1
  stage: test
  script:
    - npm ci --cache .npm --prefer-offline
    - CYPRESS_BASE_URL=http://frontend:3000 npm run test:e2e
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == "main"

deploy:
  stage: deploy
  script:
    - chmod og= $ID_RSA
    - apk update && apk add openssh-client
    - >
      ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "
      (docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY) &&
      (docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA) &&
      (docker container rm -f frontend || true) &&
      (docker run -d -p 80:3000 --name frontend $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA) &&
      (docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA $CI_REGISTRY_IMAGE:latest) &&
      (docker push $CI_REGISTRY_IMAGE:latest)
      "
  only:
    - main
